@{
    ViewBag.Title = "Color";
}
<h2>Color</h2>
<div class="container">
    

</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        signalR = function() {
            // Reference the auto-generated proxy for the hub.
            var hub = $.connection.colorHub;


            function hubStart() {
                hubHandlers();
                // Set a query string value before calling the start method (with the generated proxy)
                $.connection.hub.qs = { 'version': '1.0' };
                $.connection.hub.logging = true;
                $.connection.hub.start({ transport: ['webSockets', 'longPolling', 'foreverFrame', 'serverSentEvents'] }).done(function() {
                    // Client code that displays the transport method used by a connection
                    console.log("Connected, transport = " + $.connection.hub.transport.name);
                    hubServerTopThree();

                });

                hubClients();
                
                

            }

            function hubServerTopThree() {
                hub.server.topThree();
            }


            // Create a function that the hub can call back to display messages.
            function hubClients() {

                hub.client.addColorToPage = function(hex) {
                    console.log(hex);
                    $("<div/>", { 'class': 'colorValue' }).css({ 'float':'left','width': '50px', 'height': '50px', 'background-color': '#' + hex }).appendTo($('.container.body-content'));
                };

            }

            function hubHandlers() {
                // starting: Raised before any data is sent over the connection.
                $.connection.hub.starting(function() {
                    console.log('starting: Raised before any data is sent over the connection.');
                });
                // received: Raised when any data is received on the connection. Provides the received data.
                $.connection.hub.received(function() {
                    console.log('received: Raised when any data is received on the connection. Provides the received data.');
                });
                // connectionSlow: Raised when the client detects a slow or frequently dropping connection.
                $.connection.hub.connectionSlow(function() {
                    console.log('We are currently experiencing difficulties with the connection.');
                });
                // reconnecting: Raised when the underlying transport begins reconnecting.
                $.connection.hub.reconnecting(function() {
                    console.log('reconnecting: Raised when the underlying transport begins reconnecting.');
                });
                // reconnected: Raised when the underlying transport has reconnected.
                $.connection.hub.reconnected(function() {
                    console.log('reconnected: Raised when the underlying transport has reconnected.');
                });
                // stateChanged: Raised when the connection state changes. Provides the old state and the new state (Connecting, Connected, Reconnecting, or Disconnected).
                $.connection.hub.stateChanged(function() {
                    console.log('stateChanged: Raised when the connection state changes. Provides the old state and the new state (Connecting, Connected, Reconnecting, or Disconnected).');
                });
                // disconnected: Raised when the connection has disconnected.
                $.connection.hub.disconnected(function() {
                    console.log('disconnected: Raised when the connection has disconnected.');
                });
                // Add an error handler
                $.connection.hub.error(function(error) {
                    console.log('SignalR error: ' + error);
                });
            }

            return {
                hubStart: hubStart
            }
        }();

        $(function() {
            $('#displayname').val("JRW");
            signalR.hubStart();


            // Set initial focus to message input box.
            $('#message').focus();
        });
    </script>
}